{"filter":false,"title":"poke.py","tooltip":"/poke.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":69,"column":41},"end":{"row":70,"column":0},"action":"insert","lines":["",""],"id":3768},{"start":{"row":70,"column":0},"end":{"row":70,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":65,"column":22},"end":{"row":66,"column":0},"action":"insert","lines":["",""],"id":3769},{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"remove","lines":["    "],"id":3770},{"start":{"row":65,"column":22},"end":{"row":66,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":65,"column":22},"end":{"row":66,"column":0},"action":"insert","lines":["",""],"id":3771},{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"remove","lines":["    "],"id":3772}],[{"start":{"row":86,"column":0},"end":{"row":87,"column":56},"action":"remove","lines":["    ","print(\"--- %s seconds ---\" % (time.time() - start_time))"],"id":3773},{"start":{"row":85,"column":81},"end":{"row":86,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":24},"action":"remove","lines":["start_time = time.time()"],"id":3774},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["",""]},{"start":{"row":6,"column":11},"end":{"row":7,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":80,"column":21},"end":{"row":80,"column":22},"action":"remove","lines":["5"],"id":3775},{"start":{"row":80,"column":20},"end":{"row":80,"column":21},"action":"remove","lines":["5"]},{"start":{"row":80,"column":19},"end":{"row":80,"column":20},"action":"remove","lines":["s"]},{"start":{"row":80,"column":18},"end":{"row":80,"column":19},"action":"remove","lines":["n"]},{"start":{"row":80,"column":17},"end":{"row":80,"column":18},"action":"remove","lines":["o"]},{"start":{"row":80,"column":16},"end":{"row":80,"column":17},"action":"remove","lines":["i"]},{"start":{"row":80,"column":15},"end":{"row":80,"column":16},"action":"remove","lines":["t"]},{"start":{"row":80,"column":14},"end":{"row":80,"column":15},"action":"remove","lines":["u"]},{"start":{"row":80,"column":13},"end":{"row":80,"column":14},"action":"remove","lines":["l"]},{"start":{"row":80,"column":12},"end":{"row":80,"column":13},"action":"remove","lines":["o"]},{"start":{"row":80,"column":11},"end":{"row":80,"column":12},"action":"remove","lines":["s"]}],[{"start":{"row":80,"column":11},"end":{"row":80,"column":12},"action":"insert","lines":["p"],"id":3776},{"start":{"row":80,"column":12},"end":{"row":80,"column":13},"action":"insert","lines":["o"]},{"start":{"row":80,"column":13},"end":{"row":80,"column":14},"action":"insert","lines":["k"]},{"start":{"row":80,"column":14},"end":{"row":80,"column":15},"action":"insert","lines":["e"]},{"start":{"row":80,"column":15},"end":{"row":80,"column":16},"action":"insert","lines":["m"]},{"start":{"row":80,"column":16},"end":{"row":80,"column":17},"action":"insert","lines":["o"]},{"start":{"row":80,"column":17},"end":{"row":80,"column":18},"action":"insert","lines":["n"]},{"start":{"row":80,"column":18},"end":{"row":80,"column":19},"action":"insert","lines":["_"]},{"start":{"row":80,"column":19},"end":{"row":80,"column":20},"action":"insert","lines":["a"]}],[{"start":{"row":80,"column":20},"end":{"row":80,"column":21},"action":"insert","lines":["n"],"id":3777},{"start":{"row":80,"column":21},"end":{"row":80,"column":22},"action":"insert","lines":["s"]},{"start":{"row":80,"column":22},"end":{"row":80,"column":23},"action":"insert","lines":["w"]},{"start":{"row":80,"column":23},"end":{"row":80,"column":24},"action":"insert","lines":["e"]},{"start":{"row":80,"column":24},"end":{"row":80,"column":25},"action":"insert","lines":["r"]},{"start":{"row":80,"column":25},"end":{"row":80,"column":26},"action":"insert","lines":["s"]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":2},"action":"insert","lines":["''"],"id":3778}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":2},"action":"remove","lines":["''"],"id":3779}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":3780}],[{"start":{"row":13,"column":43},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":3781},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]},{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"insert","lines":["l"]},{"start":{"row":14,"column":5},"end":{"row":14,"column":6},"action":"insert","lines":["e"]},{"start":{"row":14,"column":6},"end":{"row":14,"column":7},"action":"insert","lines":["n"]}],[{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"insert","lines":[" "],"id":3782}],[{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"remove","lines":[" "],"id":3783}],[{"start":{"row":14,"column":6},"end":{"row":14,"column":7},"action":"remove","lines":["n"],"id":3784},{"start":{"row":14,"column":5},"end":{"row":14,"column":6},"action":"remove","lines":["e"]},{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"remove","lines":["l"]}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"insert","lines":["e"],"id":3785},{"start":{"row":14,"column":5},"end":{"row":14,"column":6},"action":"insert","lines":["v"]},{"start":{"row":14,"column":6},"end":{"row":14,"column":7},"action":"insert","lines":["o"]},{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"insert","lines":["_"]},{"start":{"row":14,"column":8},"end":{"row":14,"column":9},"action":"insert","lines":["c"]},{"start":{"row":14,"column":9},"end":{"row":14,"column":10},"action":"insert","lines":["h"]},{"start":{"row":14,"column":10},"end":{"row":14,"column":11},"action":"insert","lines":["a"]},{"start":{"row":14,"column":11},"end":{"row":14,"column":12},"action":"insert","lines":["i"]}],[{"start":{"row":14,"column":12},"end":{"row":14,"column":13},"action":"insert","lines":["n"],"id":3786},{"start":{"row":14,"column":13},"end":{"row":14,"column":14},"action":"insert","lines":["s"]}],[{"start":{"row":14,"column":14},"end":{"row":14,"column":15},"action":"insert","lines":[" "],"id":3787},{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"insert","lines":["="]}],[{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":[" "],"id":3788}],[{"start":{"row":14,"column":17},"end":{"row":14,"column":91},"action":"insert","lines":["requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\" + str(i)).json()"],"id":3789}],[{"start":{"row":14,"column":82},"end":{"row":14,"column":83},"action":"remove","lines":[")"],"id":3790},{"start":{"row":14,"column":81},"end":{"row":14,"column":82},"action":"remove","lines":["i"]},{"start":{"row":14,"column":80},"end":{"row":14,"column":82},"action":"remove","lines":["()"]},{"start":{"row":14,"column":79},"end":{"row":14,"column":80},"action":"remove","lines":["r"]},{"start":{"row":14,"column":78},"end":{"row":14,"column":79},"action":"remove","lines":["t"]},{"start":{"row":14,"column":77},"end":{"row":14,"column":78},"action":"remove","lines":["s"]},{"start":{"row":14,"column":76},"end":{"row":14,"column":77},"action":"remove","lines":[" "]},{"start":{"row":14,"column":75},"end":{"row":14,"column":76},"action":"remove","lines":["+"]},{"start":{"row":14,"column":74},"end":{"row":14,"column":75},"action":"remove","lines":[" "]}],[{"start":{"row":14,"column":74},"end":{"row":14,"column":75},"action":"insert","lines":["_"],"id":3791}],[{"start":{"row":14,"column":74},"end":{"row":14,"column":75},"action":"remove","lines":["_"],"id":3792}],[{"start":{"row":14,"column":74},"end":{"row":14,"column":75},"action":"insert","lines":[")"],"id":3793}],[{"start":{"row":14,"column":82},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":3794},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"remove","lines":["    "],"id":3795},{"start":{"row":14,"column":82},"end":{"row":15,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":15,"column":24},"end":{"row":15,"column":25},"action":"remove","lines":["0"],"id":3796},{"start":{"row":15,"column":23},"end":{"row":15,"column":24},"action":"remove","lines":["2"]},{"start":{"row":15,"column":22},"end":{"row":15,"column":23},"action":"remove","lines":["4"]}],[{"start":{"row":15,"column":22},"end":{"row":15,"column":23},"action":"insert","lines":["l"],"id":3797},{"start":{"row":15,"column":23},"end":{"row":15,"column":24},"action":"insert","lines":["e"]},{"start":{"row":15,"column":24},"end":{"row":15,"column":25},"action":"insert","lines":["n"]}],[{"start":{"row":15,"column":24},"end":{"row":15,"column":25},"action":"remove","lines":["n"],"id":3798},{"start":{"row":15,"column":23},"end":{"row":15,"column":24},"action":"remove","lines":["e"]},{"start":{"row":15,"column":22},"end":{"row":15,"column":23},"action":"remove","lines":["l"]}],[{"start":{"row":15,"column":22},"end":{"row":15,"column":23},"action":"insert","lines":["e"],"id":3799},{"start":{"row":15,"column":23},"end":{"row":15,"column":24},"action":"insert","lines":["v"]},{"start":{"row":15,"column":24},"end":{"row":15,"column":25},"action":"insert","lines":["o"]}],[{"start":{"row":15,"column":22},"end":{"row":15,"column":25},"action":"remove","lines":["evo"],"id":3800},{"start":{"row":15,"column":22},"end":{"row":15,"column":32},"action":"insert","lines":["evo_chains"]}],[{"start":{"row":15,"column":32},"end":{"row":15,"column":34},"action":"insert","lines":["[]"],"id":3801}],[{"start":{"row":15,"column":33},"end":{"row":15,"column":35},"action":"insert","lines":["''"],"id":3802}],[{"start":{"row":15,"column":34},"end":{"row":15,"column":35},"action":"insert","lines":["c"],"id":3803},{"start":{"row":15,"column":35},"end":{"row":15,"column":36},"action":"insert","lines":["o"]},{"start":{"row":15,"column":36},"end":{"row":15,"column":37},"action":"insert","lines":["u"]},{"start":{"row":15,"column":37},"end":{"row":15,"column":38},"action":"insert","lines":["n"]},{"start":{"row":15,"column":38},"end":{"row":15,"column":39},"action":"insert","lines":["t"]}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":19},"action":"insert","lines":["start = time.time()"],"id":3804}],[{"start":{"row":85,"column":81},"end":{"row":86,"column":0},"action":"insert","lines":["",""],"id":3805},{"start":{"row":86,"column":0},"end":{"row":86,"column":4},"action":"insert","lines":["    "]},{"start":{"row":86,"column":4},"end":{"row":87,"column":0},"action":"insert","lines":["",""]},{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":87,"column":4},"end":{"row":87,"column":30},"action":"insert","lines":["print(time.time() - start)"],"id":3806}],[{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"remove","lines":["    "],"id":3807}],[{"start":{"row":45,"column":3},"end":{"row":45,"column":4},"action":"remove","lines":[" "],"id":3808},{"start":{"row":45,"column":2},"end":{"row":45,"column":3},"action":"remove","lines":["8"]},{"start":{"row":45,"column":1},"end":{"row":45,"column":2},"action":"remove","lines":["1"]}],[{"start":{"row":45,"column":1},"end":{"row":45,"column":2},"action":"insert","lines":["a"],"id":3809},{"start":{"row":45,"column":2},"end":{"row":45,"column":3},"action":"insert","lines":["m"]},{"start":{"row":45,"column":3},"end":{"row":45,"column":4},"action":"insert","lines":["o"]},{"start":{"row":45,"column":4},"end":{"row":45,"column":5},"action":"insert","lines":["u"]},{"start":{"row":45,"column":5},"end":{"row":45,"column":6},"action":"insert","lines":["n"]},{"start":{"row":45,"column":6},"end":{"row":45,"column":7},"action":"insert","lines":["t"]}],[{"start":{"row":45,"column":7},"end":{"row":45,"column":8},"action":"insert","lines":[" "],"id":3810},{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"insert","lines":["o"]}],[{"start":{"row":45,"column":1},"end":{"row":45,"column":53},"action":"remove","lines":["amount oconcurrent threads since len(technicians)=18"],"id":3815}],[{"start":{"row":45,"column":1},"end":{"row":45,"column":2},"action":"insert","lines":["l"],"id":3816},{"start":{"row":45,"column":2},"end":{"row":45,"column":3},"action":"insert","lines":["e"]},{"start":{"row":45,"column":3},"end":{"row":45,"column":4},"action":"insert","lines":["n"]}],[{"start":{"row":45,"column":4},"end":{"row":45,"column":6},"action":"insert","lines":["()"],"id":3817}],[{"start":{"row":45,"column":5},"end":{"row":45,"column":6},"action":"insert","lines":["t"],"id":3818},{"start":{"row":45,"column":6},"end":{"row":45,"column":7},"action":"insert","lines":["e"]},{"start":{"row":45,"column":7},"end":{"row":45,"column":8},"action":"insert","lines":["h"]},{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"insert","lines":["c"]},{"start":{"row":45,"column":9},"end":{"row":45,"column":10},"action":"insert","lines":["n"]},{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"insert","lines":["i"]}],[{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"remove","lines":["i"],"id":3819},{"start":{"row":45,"column":9},"end":{"row":45,"column":10},"action":"remove","lines":["n"]},{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"remove","lines":["c"]},{"start":{"row":45,"column":7},"end":{"row":45,"column":8},"action":"remove","lines":["h"]}],[{"start":{"row":45,"column":7},"end":{"row":45,"column":8},"action":"insert","lines":["c"],"id":3820},{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"insert","lines":["h"]},{"start":{"row":45,"column":9},"end":{"row":45,"column":10},"action":"insert","lines":["n"]},{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"insert","lines":["i"]},{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"insert","lines":["c"]},{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"insert","lines":["i"]},{"start":{"row":45,"column":13},"end":{"row":45,"column":14},"action":"insert","lines":["a"]},{"start":{"row":45,"column":14},"end":{"row":45,"column":15},"action":"insert","lines":["n"]},{"start":{"row":45,"column":15},"end":{"row":45,"column":16},"action":"insert","lines":["s"]}],[{"start":{"row":45,"column":16},"end":{"row":45,"column":17},"action":"insert","lines":[" "],"id":3821}],[{"start":{"row":45,"column":16},"end":{"row":45,"column":17},"action":"remove","lines":[" "],"id":3822}],[{"start":{"row":45,"column":17},"end":{"row":45,"column":18},"action":"insert","lines":[" "],"id":3823},{"start":{"row":45,"column":18},"end":{"row":45,"column":19},"action":"insert","lines":["a"]},{"start":{"row":45,"column":19},"end":{"row":45,"column":20},"action":"insert","lines":["m"]},{"start":{"row":45,"column":20},"end":{"row":45,"column":21},"action":"insert","lines":["o"]},{"start":{"row":45,"column":21},"end":{"row":45,"column":22},"action":"insert","lines":["u"]},{"start":{"row":45,"column":22},"end":{"row":45,"column":23},"action":"insert","lines":["n"]},{"start":{"row":45,"column":23},"end":{"row":45,"column":24},"action":"insert","lines":["t"]}],[{"start":{"row":45,"column":24},"end":{"row":45,"column":25},"action":"insert","lines":[" "],"id":3824},{"start":{"row":45,"column":25},"end":{"row":45,"column":26},"action":"insert","lines":["o"]},{"start":{"row":45,"column":26},"end":{"row":45,"column":27},"action":"insert","lines":["f"]}],[{"start":{"row":45,"column":27},"end":{"row":45,"column":28},"action":"insert","lines":[" "],"id":3825}],[{"start":{"row":45,"column":28},"end":{"row":45,"column":29},"action":"insert","lines":["t"],"id":3826},{"start":{"row":45,"column":29},"end":{"row":45,"column":30},"action":"insert","lines":["h"]},{"start":{"row":45,"column":30},"end":{"row":45,"column":31},"action":"insert","lines":["r"]},{"start":{"row":45,"column":31},"end":{"row":45,"column":32},"action":"insert","lines":["e"]},{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"insert","lines":["a"]},{"start":{"row":45,"column":33},"end":{"row":45,"column":34},"action":"insert","lines":["d"]},{"start":{"row":45,"column":34},"end":{"row":45,"column":35},"action":"insert","lines":["s"]}],[{"start":{"row":45,"column":34},"end":{"row":45,"column":35},"action":"remove","lines":["s"],"id":3827},{"start":{"row":45,"column":33},"end":{"row":45,"column":34},"action":"remove","lines":["d"]},{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"remove","lines":["a"]},{"start":{"row":45,"column":31},"end":{"row":45,"column":32},"action":"remove","lines":["e"]},{"start":{"row":45,"column":30},"end":{"row":45,"column":31},"action":"remove","lines":["r"]},{"start":{"row":45,"column":29},"end":{"row":45,"column":30},"action":"remove","lines":["h"]},{"start":{"row":45,"column":28},"end":{"row":45,"column":29},"action":"remove","lines":["t"]}],[{"start":{"row":45,"column":28},"end":{"row":45,"column":29},"action":"insert","lines":["c"],"id":3828},{"start":{"row":45,"column":29},"end":{"row":45,"column":30},"action":"insert","lines":["o"]},{"start":{"row":45,"column":30},"end":{"row":45,"column":31},"action":"insert","lines":["n"]},{"start":{"row":45,"column":31},"end":{"row":45,"column":32},"action":"insert","lines":["c"]},{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"insert","lines":["r"]},{"start":{"row":45,"column":33},"end":{"row":45,"column":34},"action":"insert","lines":["u"]}],[{"start":{"row":45,"column":33},"end":{"row":45,"column":34},"action":"remove","lines":["u"],"id":3829},{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"remove","lines":["r"]}],[{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"insert","lines":["r"],"id":3830}],[{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"remove","lines":["r"],"id":3831}],[{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"insert","lines":["="],"id":3832},{"start":{"row":45,"column":33},"end":{"row":45,"column":34},"action":"insert","lines":["u"]}],[{"start":{"row":45,"column":33},"end":{"row":45,"column":34},"action":"remove","lines":["u"],"id":3833},{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"remove","lines":["="]}],[{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"insert","lines":["u"],"id":3834},{"start":{"row":45,"column":33},"end":{"row":45,"column":34},"action":"insert","lines":["r"]},{"start":{"row":45,"column":34},"end":{"row":45,"column":35},"action":"insert","lines":["r"]},{"start":{"row":45,"column":35},"end":{"row":45,"column":36},"action":"insert","lines":["e"]},{"start":{"row":45,"column":36},"end":{"row":45,"column":37},"action":"insert","lines":["n"]},{"start":{"row":45,"column":37},"end":{"row":45,"column":38},"action":"insert","lines":["t"]}],[{"start":{"row":45,"column":38},"end":{"row":45,"column":39},"action":"insert","lines":[" "],"id":3835},{"start":{"row":45,"column":39},"end":{"row":45,"column":40},"action":"insert","lines":["t"]},{"start":{"row":45,"column":40},"end":{"row":45,"column":41},"action":"insert","lines":["h"]},{"start":{"row":45,"column":41},"end":{"row":45,"column":42},"action":"insert","lines":["r"]},{"start":{"row":45,"column":42},"end":{"row":45,"column":43},"action":"insert","lines":["e"]},{"start":{"row":45,"column":43},"end":{"row":45,"column":44},"action":"insert","lines":["a"]},{"start":{"row":45,"column":44},"end":{"row":45,"column":45},"action":"insert","lines":["d"]},{"start":{"row":45,"column":45},"end":{"row":45,"column":46},"action":"insert","lines":["s"]}],[{"start":{"row":46,"column":43},"end":{"row":46,"column":44},"action":"remove","lines":["8"],"id":3836},{"start":{"row":46,"column":42},"end":{"row":46,"column":43},"action":"remove","lines":["1"]}],[{"start":{"row":46,"column":42},"end":{"row":46,"column":43},"action":"insert","lines":["l"],"id":3837},{"start":{"row":46,"column":43},"end":{"row":46,"column":44},"action":"insert","lines":["e"]},{"start":{"row":46,"column":44},"end":{"row":46,"column":45},"action":"insert","lines":["n"]}],[{"start":{"row":46,"column":45},"end":{"row":46,"column":47},"action":"insert","lines":["()"],"id":3838}],[{"start":{"row":46,"column":46},"end":{"row":46,"column":47},"action":"insert","lines":["t"],"id":3839},{"start":{"row":46,"column":47},"end":{"row":46,"column":48},"action":"insert","lines":["e"]},{"start":{"row":46,"column":48},"end":{"row":46,"column":49},"action":"insert","lines":["h"]}],[{"start":{"row":46,"column":48},"end":{"row":46,"column":49},"action":"remove","lines":["h"],"id":3840}],[{"start":{"row":46,"column":48},"end":{"row":46,"column":49},"action":"insert","lines":["c"],"id":3841},{"start":{"row":46,"column":49},"end":{"row":46,"column":50},"action":"insert","lines":["h"]}],[{"start":{"row":46,"column":46},"end":{"row":46,"column":50},"action":"remove","lines":["tech"],"id":3842},{"start":{"row":46,"column":46},"end":{"row":46,"column":57},"action":"insert","lines":["technicians"]}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":43},"action":"remove","lines":["total count of evolution chains is 419"],"id":3843},{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["m"]},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"insert","lines":["a"]},{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"insert","lines":["k"]},{"start":{"row":13,"column":8},"end":{"row":13,"column":9},"action":"insert","lines":["i"]},{"start":{"row":13,"column":9},"end":{"row":13,"column":10},"action":"insert","lines":["n"]},{"start":{"row":13,"column":10},"end":{"row":13,"column":11},"action":"insert","lines":["g"]}],[{"start":{"row":13,"column":11},"end":{"row":13,"column":12},"action":"insert","lines":[" "],"id":3844},{"start":{"row":13,"column":12},"end":{"row":13,"column":13},"action":"insert","lines":["c"]}],[{"start":{"row":13,"column":12},"end":{"row":13,"column":13},"action":"remove","lines":["c"],"id":3845}],[{"start":{"row":13,"column":12},"end":{"row":13,"column":13},"action":"insert","lines":["r"],"id":3846},{"start":{"row":13,"column":13},"end":{"row":13,"column":14},"action":"insert","lines":["e"]},{"start":{"row":13,"column":14},"end":{"row":13,"column":15},"action":"insert","lines":["q"]},{"start":{"row":13,"column":15},"end":{"row":13,"column":16},"action":"insert","lines":["u"]},{"start":{"row":13,"column":16},"end":{"row":13,"column":17},"action":"insert","lines":["e"]},{"start":{"row":13,"column":17},"end":{"row":13,"column":18},"action":"insert","lines":["s"]},{"start":{"row":13,"column":18},"end":{"row":13,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":13,"column":19},"end":{"row":13,"column":20},"action":"insert","lines":[" "],"id":3847},{"start":{"row":13,"column":20},"end":{"row":13,"column":21},"action":"insert","lines":["t"]},{"start":{"row":13,"column":21},"end":{"row":13,"column":22},"action":"insert","lines":["o"]}],[{"start":{"row":13,"column":22},"end":{"row":13,"column":23},"action":"insert","lines":[" "],"id":3848},{"start":{"row":13,"column":23},"end":{"row":13,"column":24},"action":"insert","lines":["o"]},{"start":{"row":13,"column":24},"end":{"row":13,"column":25},"action":"insert","lines":["b"]},{"start":{"row":13,"column":25},"end":{"row":13,"column":26},"action":"insert","lines":["t"]},{"start":{"row":13,"column":26},"end":{"row":13,"column":27},"action":"insert","lines":["a"]},{"start":{"row":13,"column":27},"end":{"row":13,"column":28},"action":"insert","lines":["i"]},{"start":{"row":13,"column":28},"end":{"row":13,"column":29},"action":"insert","lines":["n"]}],[{"start":{"row":13,"column":29},"end":{"row":13,"column":30},"action":"insert","lines":[" "],"id":3849},{"start":{"row":13,"column":30},"end":{"row":13,"column":31},"action":"insert","lines":["t"]},{"start":{"row":13,"column":31},"end":{"row":13,"column":32},"action":"insert","lines":["o"]},{"start":{"row":13,"column":32},"end":{"row":13,"column":33},"action":"insert","lines":["t"]},{"start":{"row":13,"column":33},"end":{"row":13,"column":34},"action":"insert","lines":["a"]}],[{"start":{"row":13,"column":33},"end":{"row":13,"column":34},"action":"remove","lines":["a"],"id":3850}],[{"start":{"row":13,"column":33},"end":{"row":13,"column":34},"action":"insert","lines":["a"],"id":3851},{"start":{"row":13,"column":34},"end":{"row":13,"column":35},"action":"insert","lines":["l"]}],[{"start":{"row":13,"column":35},"end":{"row":13,"column":36},"action":"insert","lines":[" "],"id":3852},{"start":{"row":13,"column":36},"end":{"row":13,"column":37},"action":"insert","lines":["a"]},{"start":{"row":13,"column":37},"end":{"row":13,"column":38},"action":"insert","lines":["m"]},{"start":{"row":13,"column":38},"end":{"row":13,"column":39},"action":"insert","lines":["o"]},{"start":{"row":13,"column":39},"end":{"row":13,"column":40},"action":"insert","lines":["u"]},{"start":{"row":13,"column":40},"end":{"row":13,"column":41},"action":"insert","lines":["n"]},{"start":{"row":13,"column":41},"end":{"row":13,"column":42},"action":"insert","lines":["t"]}],[{"start":{"row":13,"column":42},"end":{"row":13,"column":43},"action":"insert","lines":[" "],"id":3853}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["o"],"id":3854},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"insert","lines":["f"]}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"insert","lines":[" "],"id":3855}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"remove","lines":[" "],"id":3856},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"remove","lines":["f"]},{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"remove","lines":["o"]}],[{"start":{"row":13,"column":43},"end":{"row":13,"column":44},"action":"insert","lines":["o"],"id":3857},{"start":{"row":13,"column":44},"end":{"row":13,"column":45},"action":"insert","lines":["f"]}],[{"start":{"row":13,"column":45},"end":{"row":13,"column":46},"action":"insert","lines":[" "],"id":3858},{"start":{"row":13,"column":46},"end":{"row":13,"column":47},"action":"insert","lines":["e"]},{"start":{"row":13,"column":47},"end":{"row":13,"column":48},"action":"insert","lines":["v"]},{"start":{"row":13,"column":48},"end":{"row":13,"column":49},"action":"insert","lines":["o"]},{"start":{"row":13,"column":49},"end":{"row":13,"column":50},"action":"insert","lines":["l"]},{"start":{"row":13,"column":50},"end":{"row":13,"column":51},"action":"insert","lines":["i"]}],[{"start":{"row":13,"column":50},"end":{"row":13,"column":51},"action":"remove","lines":["i"],"id":3859}],[{"start":{"row":13,"column":50},"end":{"row":13,"column":51},"action":"insert","lines":["u"],"id":3860},{"start":{"row":13,"column":51},"end":{"row":13,"column":52},"action":"insert","lines":["t"]},{"start":{"row":13,"column":52},"end":{"row":13,"column":53},"action":"insert","lines":["i"]},{"start":{"row":13,"column":53},"end":{"row":13,"column":54},"action":"insert","lines":["o"]},{"start":{"row":13,"column":54},"end":{"row":13,"column":55},"action":"insert","lines":["n"]}],[{"start":{"row":13,"column":55},"end":{"row":13,"column":56},"action":"insert","lines":[" "],"id":3861},{"start":{"row":13,"column":56},"end":{"row":13,"column":57},"action":"insert","lines":["c"]},{"start":{"row":13,"column":57},"end":{"row":13,"column":58},"action":"insert","lines":["h"]},{"start":{"row":13,"column":58},"end":{"row":13,"column":59},"action":"insert","lines":["a"]},{"start":{"row":13,"column":59},"end":{"row":13,"column":60},"action":"insert","lines":["i"]},{"start":{"row":13,"column":60},"end":{"row":13,"column":61},"action":"insert","lines":["n"]},{"start":{"row":13,"column":61},"end":{"row":13,"column":62},"action":"insert","lines":["s"]}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":19},"action":"remove","lines":["start = time.time()"],"id":3862}],[{"start":{"row":87,"column":0},"end":{"row":87,"column":26},"action":"remove","lines":["print(time.time() - start)"],"id":3863}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":11},"action":"remove","lines":["import time"],"id":3864}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":11},"action":"remove","lines":["import time"],"id":3865},{"start":{"row":2,"column":10},"end":{"row":3,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":3866},{"start":{"row":4,"column":49},"end":{"row":5,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["import requests","import json","import csv","import asyncio","from concurrent.futures import ThreadPoolExecutor","","'''","Evolution Chain for Charmander","'''","def evolution_chain():","    #making request to obtain total amount of evolution chains","    evo_chains = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\").json()","    for i in range(1, evo_chains['count']):","        #json object","        poke_evo_chain = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\" + str(i)).json()","        #checking if each evolution chain contains charmander as a species","        if (poke_evo_chain['chain']['species']['name'] == 'charmander'):","            return poke_evo_chain","    ","'''","building list of pokemon that have the technician ability","'''","technicians = []","poke_techs = requests.get(\"https://pokeapi.co/api/v2/ability/technician\").json()","for pokemon in poke_techs[\"pokemon\"]: ","    #adding the name of each pokemon who has technician to the list of technicians","    technicians.append(pokemon[\"pokemon\"]['name'])","    ","'''","checking if each technican has the scratch move","'''","def find_scratcher_technican(url, technician):","    #url param is created in make_requests()","    poke_each_tech = requests.get(url).json()","    for move in poke_each_tech[\"moves\"]:","        if (move['move']['name'] == 'scratch'):","            return technician","            ","'''","Asynchronously calling find_scratcher_technican on each technician in technicians","(drastically improves runtime)","'''","#len(technicians) amount of concurrent threads","executor = ThreadPoolExecutor(max_workers=len(technicians))","loop = asyncio.get_event_loop()","#coroutine object","async def make_requests():","    #generating list of awaitable objects that find_scratcher_technician for each technician in technicans","    futures = [loop.run_in_executor(executor, find_scratcher_technican, \"https://pokeapi.co/api/v2/pokemon/\" + technician, technician) for technician in technicians]","    #concurrently running all awaitables in futures ","    responses = await asyncio.gather(*futures)","    return responses","#scheduling tasks and running","technician_scratchers = loop.run_until_complete(make_requests())","#cleaning up none objects from list","technician_scratchers = [i for i in technician_scratchers if i]","","'''","Pink pokemon that live in mountains","'''","def pinks_mountain():","    mountains = []","    pink_mountain = []","","    poke_mtn = requests.get(\"https://pokeapi.co/api/v2/pokemon-habitat/mountain\").json()","    for pokemon in poke_mtn['pokemon_species']:","        #creating list of pokemon that live in mountains","        mountains.append(pokemon['name'])","        ","    poke_pink = requests.get(\"https://pokeapi.co/api/v2/pokemon-color/pink\").json()    ","    for pokemon in poke_pink['pokemon_species']:","        #searching for pokemon that are pink out of the pokemon that live in the mountains","        if pokemon['name'] in mountains:","            pink_mountain.append(pokemon['name'])","    return pink_mountain","","'''","Exporting outputs to CSV file","'''","with open('pokemon_answers.csv', 'w', newline='') as file:","    writer = csv.writer(file)","    writer.writerow(['Q1','Q2','Q3'])","    writer.writerow([evolution_chain(), technician_scratchers, pinks_mountain()])","    ",""],"id":3867}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"insert","lines":["import requests","import json","import csv","import asyncio","from concurrent.futures import ThreadPoolExecutor","","'''","Evolution Chain for Charmander","'''","def evolution_chain():","    #making request to obtain total amount of evolution chains","    evo_chains = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\").json()","    for i in range(1, evo_chains['count']):","        #json object","        poke_evo_chain = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\" + str(i)).json()","        #checking if each evolution chain contains charmander as a species","        if (poke_evo_chain['chain']['species']['name'] == 'charmander'):","            return poke_evo_chain","    ","'''","building list of pokemon that have the technician ability","'''","technicians = []","poke_techs = requests.get(\"https://pokeapi.co/api/v2/ability/technician\").json()","for pokemon in poke_techs[\"pokemon\"]: ","    #adding the name of each pokemon who has technician to the list of technicians","    technicians.append(pokemon[\"pokemon\"]['name'])","    ","'''","checking if each technican has the scratch move","'''","def find_scratcher_technican(url, technician):","    #url param is created in make_requests()","    poke_each_tech = requests.get(url).json()","    for move in poke_each_tech[\"moves\"]:","        if (move['move']['name'] == 'scratch'):","            return technician","            ","'''","Asynchronously calling find_scratcher_technican on each technician in technicians","(drastically improves runtime)","'''","#len(technicians) amount of concurrent threads","executor = ThreadPoolExecutor(max_workers=len(technicians))","loop = asyncio.get_event_loop()","#coroutine object","async def make_requests():","    #generating list of awaitable objects that find_scratcher_technician for each technician in technicans","    futures = [loop.run_in_executor(executor, find_scratcher_technican, \"https://pokeapi.co/api/v2/pokemon/\" + technician, technician) for technician in technicians]","    #concurrently running all awaitables in futures ","    responses = await asyncio.gather(*futures)","    return responses","#scheduling tasks and running","technician_scratchers = loop.run_until_complete(make_requests())","#cleaning up none objects from list","technician_scratchers = [i for i in technician_scratchers if i]","","'''","Pink pokemon that live in mountains","'''","def pinks_mountain():","    mountains = []","    pink_mountain = []","","    poke_mtn = requests.get(\"https://pokeapi.co/api/v2/pokemon-habitat/mountain\").json()","    for pokemon in poke_mtn['pokemon_species']:","        #creating list of pokemon that live in mountains","        mountains.append(pokemon['name'])","        ","    poke_pink = requests.get(\"https://pokeapi.co/api/v2/pokemon-color/pink\").json()    ","    for pokemon in poke_pink['pokemon_species']:","        #searching for pokemon that are pink out of the pokemon that live in the mountains","        if pokemon['name'] in mountains:","            pink_mountain.append(pokemon['name'])","    return pink_mountain","","'''","Exporting outputs to CSV file","'''","with open('pokemon_answers.csv', 'w', newline='') as file:","    writer = csv.writer(file)","    writer.writerow(['Q1','Q2','Q3'])","    writer.writerow([evolution_chain(), technician_scratchers, pinks_mountain()])","    ",""],"id":3868}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["import requests","import json","import csv","import asyncio","from concurrent.futures import ThreadPoolExecutor","","'''","Evolution Chain for Charmander","'''","def evolution_chain():","    #making request to obtain total amount of evolution chains","    evo_chains = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\").json()","    for i in range(1, evo_chains['count']):","        #json object","        poke_evo_chain = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\" + str(i)).json()","        #checking if each evolution chain contains charmander as a species","        if (poke_evo_chain['chain']['species']['name'] == 'charmander'):","            return poke_evo_chain","    ","'''","building list of pokemon that have the technician ability","'''","technicians = []","poke_techs = requests.get(\"https://pokeapi.co/api/v2/ability/technician\").json()","for pokemon in poke_techs[\"pokemon\"]: ","    #adding the name of each pokemon who has technician to the list of technicians","    technicians.append(pokemon[\"pokemon\"]['name'])","    ","'''","checking if each technican has the scratch move","'''","def find_scratcher_technican(url, technician):","    #url param is created in make_requests()","    poke_each_tech = requests.get(url).json()","    for move in poke_each_tech[\"moves\"]:","        if (move['move']['name'] == 'scratch'):","            return technician","            ","'''","Asynchronously calling find_scratcher_technican on each technician in technicians","(drastically improves runtime)","'''","#len(technicians) amount of concurrent threads","executor = ThreadPoolExecutor(max_workers=len(technicians))","loop = asyncio.get_event_loop()","#coroutine object","async def make_requests():","    #generating list of awaitable objects that find_scratcher_technician for each technician in technicans","    futures = [loop.run_in_executor(executor, find_scratcher_technican, \"https://pokeapi.co/api/v2/pokemon/\" + technician, technician) for technician in technicians]","    #concurrently running all awaitables in futures ","    responses = await asyncio.gather(*futures)","    return responses","#scheduling tasks and running","technician_scratchers = loop.run_until_complete(make_requests())","#cleaning up none objects from list","technician_scratchers = [i for i in technician_scratchers if i]","","'''","Pink pokemon that live in mountains","'''","def pinks_mountain():","    mountains = []","    pink_mountain = []","","    poke_mtn = requests.get(\"https://pokeapi.co/api/v2/pokemon-habitat/mountain\").json()","    for pokemon in poke_mtn['pokemon_species']:","        #creating list of pokemon that live in mountains","        mountains.append(pokemon['name'])","        ","    poke_pink = requests.get(\"https://pokeapi.co/api/v2/pokemon-color/pink\").json()    ","    for pokemon in poke_pink['pokemon_species']:","        #searching for pokemon that are pink out of the pokemon that live in the mountains","        if pokemon['name'] in mountains:","            pink_mountain.append(pokemon['name'])","    return pink_mountain","","'''","Exporting outputs to CSV file","'''","with open('pokemon_answers.csv', 'w', newline='') as file:","    writer = csv.writer(file)","    writer.writerow(['Q1','Q2','Q3'])","    writer.writerow([evolution_chain(), technician_scratchers, pinks_mountain()])","    ",""],"id":3869}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"insert","lines":["import requests","import json","import csv","import asyncio","from concurrent.futures import ThreadPoolExecutor","","'''","Evolution Chain for Charmander","'''","def evolution_chain():","    #making request to obtain total amount of evolution chains","    evo_chains = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\").json()","    for i in range(1, evo_chains['count']):","        #json object","        poke_evo_chain = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\" + str(i)).json()","        #checking if each evolution chain contains charmander as a species","        if (poke_evo_chain['chain']['species']['name'] == 'charmander'):","            return poke_evo_chain","    ","'''","building list of pokemon that have the technician ability","'''","technicians = []","poke_techs = requests.get(\"https://pokeapi.co/api/v2/ability/technician\").json()","for pokemon in poke_techs[\"pokemon\"]: ","    #adding the name of each pokemon who has technician to the list of technicians","    technicians.append(pokemon[\"pokemon\"]['name'])","    ","'''","checking if each technican has the scratch move","'''","def find_scratcher_technican(url, technician):","    #url param is created in make_requests()","    poke_each_tech = requests.get(url).json()","    for move in poke_each_tech[\"moves\"]:","        if (move['move']['name'] == 'scratch'):","            return technician","            ","'''","Asynchronously calling find_scratcher_technican on each technician in technicians","(drastically improves runtime)","'''","#len(technicians) amount of concurrent threads","executor = ThreadPoolExecutor(max_workers=len(technicians))","loop = asyncio.get_event_loop()","#coroutine object","async def make_requests():","    #generating list of awaitable objects that find_scratcher_technician for each technician in technicans","    futures = [loop.run_in_executor(executor, find_scratcher_technican, \"https://pokeapi.co/api/v2/pokemon/\" + technician, technician) for technician in technicians]","    #concurrently running all awaitables in futures ","    responses = await asyncio.gather(*futures)","    return responses","#scheduling tasks and running","technician_scratchers = loop.run_until_complete(make_requests())","#cleaning up none objects from list","technician_scratchers = [i for i in technician_scratchers if i]","","'''","Pink pokemon that live in mountains","'''","def pinks_mountain():","    mountains = []","    pink_mountain = []","","    poke_mtn = requests.get(\"https://pokeapi.co/api/v2/pokemon-habitat/mountain\").json()","    for pokemon in poke_mtn['pokemon_species']:","        #creating list of pokemon that live in mountains","        mountains.append(pokemon['name'])","        ","    poke_pink = requests.get(\"https://pokeapi.co/api/v2/pokemon-color/pink\").json()    ","    for pokemon in poke_pink['pokemon_species']:","        #searching for pokemon that are pink out of the pokemon that live in the mountains","        if pokemon['name'] in mountains:","            pink_mountain.append(pokemon['name'])","    return pink_mountain","","'''","Exporting outputs to CSV file","'''","with open('pokemon_answers.csv', 'w', newline='') as file:","    writer = csv.writer(file)","    writer.writerow(['Q1','Q2','Q3'])","    writer.writerow([evolution_chain(), technician_scratchers, pinks_mountain()])","    ",""],"id":3870}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["import requests","import json","import csv","import asyncio","from concurrent.futures import ThreadPoolExecutor","","'''","Evolution Chain for Charmander","'''","def evolution_chain():","    #making request to obtain total amount of evolution chains","    evo_chains = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\").json()","    for i in range(1, evo_chains['count']):","        #json object","        poke_evo_chain = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\" + str(i)).json()","        #checking if each evolution chain contains charmander as a species","        if (poke_evo_chain['chain']['species']['name'] == 'charmander'):","            return poke_evo_chain","    ","'''","building list of pokemon that have the technician ability","'''","technicians = []","poke_techs = requests.get(\"https://pokeapi.co/api/v2/ability/technician\").json()","for pokemon in poke_techs[\"pokemon\"]: ","    #adding the name of each pokemon who has technician to the list of technicians","    technicians.append(pokemon[\"pokemon\"]['name'])","    ","'''","checking if each technican has the scratch move","'''","def find_scratcher_technican(url, technician):","    #url param is created in make_requests()","    poke_each_tech = requests.get(url).json()","    for move in poke_each_tech[\"moves\"]:","        if (move['move']['name'] == 'scratch'):","            return technician","            ","'''","Asynchronously calling find_scratcher_technican on each technician in technicians","(drastically improves runtime)","'''","#len(technicians) amount of concurrent threads","executor = ThreadPoolExecutor(max_workers=len(technicians))","loop = asyncio.get_event_loop()","#coroutine object","async def make_requests():","    #generating list of awaitable objects that find_scratcher_technician for each technician in technicans","    futures = [loop.run_in_executor(executor, find_scratcher_technican, \"https://pokeapi.co/api/v2/pokemon/\" + technician, technician) for technician in technicians]","    #concurrently running all awaitables in futures ","    responses = await asyncio.gather(*futures)","    return responses","#scheduling tasks and running","technician_scratchers = loop.run_until_complete(make_requests())","#cleaning up none objects from list","technician_scratchers = [i for i in technician_scratchers if i]","","'''","Pink pokemon that live in mountains","'''","def pinks_mountain():","    mountains = []","    pink_mountain = []","","    poke_mtn = requests.get(\"https://pokeapi.co/api/v2/pokemon-habitat/mountain\").json()","    for pokemon in poke_mtn['pokemon_species']:","        #creating list of pokemon that live in mountains","        mountains.append(pokemon['name'])","        ","    poke_pink = requests.get(\"https://pokeapi.co/api/v2/pokemon-color/pink\").json()    ","    for pokemon in poke_pink['pokemon_species']:","        #searching for pokemon that are pink out of the pokemon that live in the mountains","        if pokemon['name'] in mountains:","            pink_mountain.append(pokemon['name'])","    return pink_mountain","","'''","Exporting outputs to CSV file","'''","with open('pokemon_answers.csv', 'w', newline='') as file:","    writer = csv.writer(file)","    writer.writerow(['Q1','Q2','Q3'])","    writer.writerow([evolution_chain(), technician_scratchers, pinks_mountain()])","    ",""],"id":3871}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"insert","lines":["import requests","import json","import csv","import asyncio","from concurrent.futures import ThreadPoolExecutor","","'''","Evolution Chain for Charmander","'''","def evolution_chain():","    #making request to obtain total amount of evolution chains","    evo_chains = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\").json()","    for i in range(1, evo_chains['count']):","        #json object","        poke_evo_chain = requests.get(\"https://pokeapi.co/api/v2/evolution-chain/\" + str(i)).json()","        #checking if each evolution chain contains charmander as a species","        if (poke_evo_chain['chain']['species']['name'] == 'charmander'):","            return poke_evo_chain","    ","'''","building list of pokemon that have the technician ability","'''","technicians = []","poke_techs = requests.get(\"https://pokeapi.co/api/v2/ability/technician\").json()","for pokemon in poke_techs[\"pokemon\"]: ","    #adding the name of each pokemon who has technician to the list of technicians","    technicians.append(pokemon[\"pokemon\"]['name'])","    ","'''","checking if each technican has the scratch move","'''","def find_scratcher_technican(url, technician):","    #url param is created in make_requests()","    poke_each_tech = requests.get(url).json()","    for move in poke_each_tech[\"moves\"]:","        if (move['move']['name'] == 'scratch'):","            return technician","            ","'''","Asynchronously calling find_scratcher_technican on each technician in technicians","(drastically improves runtime)","'''","#len(technicians) amount of concurrent threads","executor = ThreadPoolExecutor(max_workers=len(technicians))","loop = asyncio.get_event_loop()","#coroutine object","async def make_requests():","    #generating list of awaitable objects that find_scratcher_technician for each technician in technicans","    futures = [loop.run_in_executor(executor, find_scratcher_technican, \"https://pokeapi.co/api/v2/pokemon/\" + technician, technician) for technician in technicians]","    #concurrently running all awaitables in futures ","    responses = await asyncio.gather(*futures)","    return responses","#scheduling tasks and running","technician_scratchers = loop.run_until_complete(make_requests())","#cleaning up none objects from list","technician_scratchers = [i for i in technician_scratchers if i]","","'''","Pink pokemon that live in mountains","'''","def pinks_mountain():","    mountains = []","    pink_mountain = []","","    poke_mtn = requests.get(\"https://pokeapi.co/api/v2/pokemon-habitat/mountain\").json()","    for pokemon in poke_mtn['pokemon_species']:","        #creating list of pokemon that live in mountains","        mountains.append(pokemon['name'])","        ","    poke_pink = requests.get(\"https://pokeapi.co/api/v2/pokemon-color/pink\").json()    ","    for pokemon in poke_pink['pokemon_species']:","        #searching for pokemon that are pink out of the pokemon that live in the mountains","        if pokemon['name'] in mountains:","            pink_mountain.append(pokemon['name'])","    return pink_mountain","","'''","Exporting outputs to CSV file","'''","with open('pokemon_answers.csv', 'w', newline='') as file:","    writer = csv.writer(file)","    writer.writerow(['Q1','Q2','Q3'])","    writer.writerow([evolution_chain(), technician_scratchers, pinks_mountain()])","    ",""],"id":3872}]]},"ace":{"folds":[],"scrolltop":521,"scrollleft":0,"selection":{"start":{"row":84,"column":0},"end":{"row":84,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":1,"state":"start","mode":"ace/mode/python"}},"timestamp":1583911545887,"hash":"8b9e551ef4bcac891e9e1ccd0893b4aba2576df0"}